name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - 'LICENSE.txt'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

env:
  BASE_URL: '/'
  GH_TOKEN: ${{ github.token }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Generate requirements file
        run: pip freeze > requirements.txt

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Find site-packages and zip Package
        run: |
          SITE_PACKAGES=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
          cd $SITE_PACKAGES
          zip -r ../../sailpoint_ocsf_lambda_package.zip *
          cd ../..

      - name: Add additional files to ZIP
        run: zip sailpoint_ocsf_lambda_package.zip sailpointEventCollector.py ocsf_map.json  normalized_terms.json  enum_mapping.json

      - name: Create release with versioning
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sailpoint_ocsf_lambda_package.zip
          asset_name: sailpoint_ocsf_lambda_package.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload additional files to Release
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./sailpointOCSFGlueETL.py \
          "${{ steps.create_release.outputs.upload_url }}?name=sailpointOCSFGlueETL.py"
          
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./cloudformation.yaml \
          "${{ steps.create_release.outputs.upload_url }}?name=cloudformation.yaml"
          
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @./amazon_security_lake_integration_guide.docx \
          "${{ steps.create_release.outputs.upload_url }}?name=amazon_security_lake_integration_guide.docx"
