name: Release

on:
  push:
    tags:
      - 'v*'
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - 'LICENSE.txt'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

env:
  BASE_URL: '/'
  GH_TOKEN: ${{ github.token }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install pipreqs
        run: pip install pipreqs

      - name: Generate requirements.txt
        run: |
          mkdir temp_dir
          cp sailpointEventCollector.py temp_dir/
          pipreqs temp_dir/

      - name: Install dependencies
        run: pip install -r temp_dir/requirements.txt

      - name: Find site-packages directory
        run: echo "SITE_PACKAGES_PATH=$(python -c 'from distutils.sysconfig import get_python_lib; print(get_python_lib())')" >> $GITHUB_ENV

      - name: Zip dependencies
        run: |
          mkdir package_temp
          cp -r ${{ env.SITE_PACKAGES_PATH }}/* package_temp/
          cp sailpointEventCollector.py package_temp/
          cp ocsf_map.json package_temp/
          cp normalized_terms.json package_temp/
          cp enum_mapping.json package_temp/
          cd package_temp
          zip -r ../sailpoint_ocsf_lambda_package.zip .

      - name: Extract tag from GITHUB_REF
        id: tag
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/})"

      - name: Create release with versioning
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sailpoint_ocsf_lambda_package.zip
          asset_name: sailpoint_ocsf_lambda_package.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload cloudformation.yaml
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cloudformation.yaml
          asset_name: cloudformation.yaml
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload sailpointOCSFGlueETL.py
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sailpointOCSFGlueETL.py
          asset_name: sailpointOCSFGlueETL.py
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload amazon_security_lake_integration_guide.docx
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amazon_security_lake_integration_guide.docx
          asset_name: amazon_security_lake_integration_guide.docx
          asset_content_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}